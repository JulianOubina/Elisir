{"ast":null,"code":"var _jsxFileName = \"E:\\\\UADE\\\\2023\\\\2C\\\\2-Seminario de Integracion Profecional\\\\Elixir\\\\Elisir\\\\ServiceHub2\\\\service-hub\\\\src\\\\components\\\\form\\\\ControlledPasswordField.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ControlledPasswordField({\n  label,\n  value,\n  onChange,\n  ...props\n}) {\n  _s();\n  const [showPassword, setShowPassword] = useState(false);\n  const [hasTyped, setHasTyped] = useState(false); // Nuevo estado para registrar si el usuario ha empezado a escribir\n\n  const handleTogglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  const handleOnChange = event => {\n    setHasTyped(true); // Cuando el usuario escribe, actualizamos el estado a true\n    onChange(event);\n  };\n  const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&#])[A-Za-z\\d@$!%*?&#]{8,}$/;\n  const isValid = regex.test(value);\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    type: showPassword ? 'text' : 'password',\n    label: label,\n    value: value,\n    onChange: handleOnChange,\n    error: hasTyped && !isValid // Solo mostramos el error si hasTyped es true y la contraseña no es válida\n    ,\n    helperText: hasTyped && !isValid && 'La contraseña debe tener al menos 8 caracteres y contener al menos una letra mayúscula, una letra minúscula, un dígito numérico y un carácter especial (como !@#$%^&*).',\n    variant: \"outlined\",\n    fullWidth: true\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    ,\n    ...props,\n    InputProps: {\n      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n        position: \"end\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"end\",\n          onClick: handleTogglePasswordVisibility,\n          children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(ControlledPasswordField, \"OoZ1JV0DGXnlmRLFRAwk4PcLfic=\");\n_c = ControlledPasswordField;\nexport default ControlledPasswordField;\nvar _c;\n$RefreshReg$(_c, \"ControlledPasswordField\");","map":{"version":3,"names":["React","useState","TextField","InputAdornment","IconButton","Visibility","VisibilityOff","jsxDEV","_jsxDEV","ControlledPasswordField","label","value","onChange","props","_s","showPassword","setShowPassword","hasTyped","setHasTyped","handleTogglePasswordVisibility","handleOnChange","event","regex","isValid","test","type","error","helperText","variant","fullWidth","InputProps","endAdornment","position","children","edge","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/UADE/2023/2C/2-Seminario de Integracion Profecional/Elixir/Elisir/ServiceHub2/service-hub/src/components/form/ControlledPasswordField.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\nfunction ControlledPasswordField({ label, value, onChange, ...props }) {\n  const [showPassword, setShowPassword] = useState(false);\n  const [hasTyped, setHasTyped] = useState(false); // Nuevo estado para registrar si el usuario ha empezado a escribir\n\n  const handleTogglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleOnChange = (event) => {\n    setHasTyped(true); // Cuando el usuario escribe, actualizamos el estado a true\n    onChange(event);\n  };\n\n  const regex =\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&#])[A-Za-z\\d@$!%*?&#]{8,}$/;\n  const isValid = regex.test(value);\n\n  return (\n    <TextField\n      type={showPassword ? 'text' : 'password'}\n      label={label}\n      value={value}\n      onChange={handleOnChange}\n      error={hasTyped && !isValid} // Solo mostramos el error si hasTyped es true y la contraseña no es válida\n      helperText={\n        hasTyped &&\n        !isValid &&\n        'La contraseña debe tener al menos 8 caracteres y contener al menos una letra mayúscula, una letra minúscula, un dígito numérico y un carácter especial (como !@#$%^&*).'\n      }\n      variant=\"outlined\"\n      fullWidth\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...props}\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton edge=\"end\" onClick={handleTogglePasswordVisibility}>\n              {showPassword ? <VisibilityOff /> : <Visibility />}\n            </IconButton>\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n}\n\nexport default ControlledPasswordField;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,UAAU,MAAM,gCAAgC;AACvD,OAAOC,aAAa,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,SAASC,uBAAuBA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC,QAAQ;EAAE,GAAGC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACrE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEjD,MAAMkB,8BAA8B,GAAGA,CAAA,KAAM;IAC3CH,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,MAAMK,cAAc,GAAIC,KAAK,IAAK;IAChCH,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IACnBN,QAAQ,CAACS,KAAK,CAAC;EACjB,CAAC;EAED,MAAMC,KAAK,GACT,wEAAwE;EAC1E,MAAMC,OAAO,GAAGD,KAAK,CAACE,IAAI,CAACb,KAAK,CAAC;EAEjC,oBACEH,OAAA,CAACN,SAAS;IACRuB,IAAI,EAAEV,YAAY,GAAG,MAAM,GAAG,UAAW;IACzCL,KAAK,EAAEA,KAAM;IACbC,KAAK,EAAEA,KAAM;IACbC,QAAQ,EAAEQ,cAAe;IACzBM,KAAK,EAAET,QAAQ,IAAI,CAACM,OAAQ,CAAC;IAAA;IAC7BI,UAAU,EACRV,QAAQ,IACR,CAACM,OAAO,IACR,yKACD;IACDK,OAAO,EAAC,UAAU;IAClBC,SAAS;IACT;IAAA;IAAA,GACIhB,KAAK;IACTiB,UAAU,EAAE;MACVC,YAAY,eACVvB,OAAA,CAACL,cAAc;QAAC6B,QAAQ,EAAC,KAAK;QAAAC,QAAA,eAC5BzB,OAAA,CAACJ,UAAU;UAAC8B,IAAI,EAAC,KAAK;UAACC,OAAO,EAAEhB,8BAA+B;UAAAc,QAAA,EAC5DlB,YAAY,gBAAGP,OAAA,CAACF,aAAa;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAG/B,OAAA,CAACH,UAAU;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAEpB;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN;AAACzB,EAAA,CA5CQL,uBAAuB;AAAA+B,EAAA,GAAvB/B,uBAAuB;AA8ChC,eAAeA,uBAAuB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}