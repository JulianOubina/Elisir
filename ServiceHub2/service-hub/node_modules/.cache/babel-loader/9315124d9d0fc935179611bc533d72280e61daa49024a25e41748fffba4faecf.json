{"ast":null,"code":"var _jsxFileName = \"E:\\\\UADE\\\\2023\\\\2C\\\\5-Aplicaciones Interactivas\\\\ServiceHub2\\\\service-hub\\\\src\\\\pages\\\\ChangePassword\\\\index.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Container } from '@mui/material';\nimport { useLocation } from 'react-router-dom';\nimport { makeStyles } from '@mui/styles';\nimport mockDataBaseUserCredentials from '../../data/mockDataBaseUserCredentials';\nimport NotificationRed from '../../components/ui/NotificationRed';\nimport NotificationGreen from '../../components/ui/NotificationGreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useQuery() {\n  _s();\n  return new URLSearchParams(useLocation().search);\n}\n_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: '100vh'\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    margin: theme.spacing(1),\n    width: '100%'\n  },\n  title: {\n    margin: theme.spacing(1)\n  }\n}));\nfunction ChangePasswordPage() {\n  _s2();\n  const classes = useStyles();\n  const query = useQuery();\n  const email = query.get('email');\n  const [originalPassword, setOriginalPassword] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [notificationRedOpen, setNotificationRedOpen] = useState(false);\n  const [notificationRedMessage, setNotificationRedMessage] = useState('');\n  const [notificationGreenOpen, setNotificationGreenOpen] = useState(false);\n  const [notificationGreenMessage, setNotificationGreenMessage] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    const userCredentials = mockDataBaseUserCredentials.find(user => user.email === email);\n    if (!userCredentials || userCredentials.password !== originalPassword) {\n      setNotificationRedMessage('Contraseña original incorrecta.');\n      setNotificationRedOpen(true);\n      return;\n    }\n    if (password !== confirmPassword) {\n      setNotificationRedMessage('Las contraseñas ingresadas no coinciden.');\n      setNotificationRedOpen(true);\n      return;\n    }\n\n    // Aquí puedes agregar la lógica para restablecer la contraseña en la base de datos.\n    setNotificationGreenMessage('Contraseña modificada con exito!');\n    setNotificationGreenOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Restablecer Contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textField,\n        type: \"password\",\n        label: \"Contrase\\xF1a Original\",\n        variant: \"outlined\",\n        fullWidth: true,\n        value: originalPassword,\n        onChange: event => setOriginalPassword(event.target.value),\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textField,\n        type: \"password\",\n        label: \"Nueva Contrase\\xF1a\",\n        variant: \"outlined\",\n        fullWidth: true,\n        value: password,\n        onChange: event => setPassword(event.target.value),\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textField,\n        type: \"password\",\n        label: \"Confirmar Contrase\\xF1a\",\n        variant: \"outlined\",\n        fullWidth: true,\n        value: confirmPassword,\n        onChange: event => setConfirmPassword(event.target.value),\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.button,\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Confirmar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationRed, {\n      open: notificationRedOpen,\n      message: notificationRedMessage,\n      onClose: () => setNotificationRedOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationGreen, {\n      open: notificationGreenOpen,\n      message: notificationGreenMessage,\n      onClose: () => setNotificationGreenOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s2(ChangePasswordPage, \"gTcx9RKzlSc6IHuP10dlqw+8A0M=\", false, function () {\n  return [useStyles, useQuery];\n});\n_c = ChangePasswordPage;\nexport default ChangePasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ChangePasswordPage\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","Container","useLocation","makeStyles","mockDataBaseUserCredentials","NotificationRed","NotificationGreen","jsxDEV","_jsxDEV","useQuery","_s","URLSearchParams","search","useStyles","theme","root","display","flexDirection","alignItems","height","button","margin","spacing","textField","width","title","ChangePasswordPage","_s2","classes","query","email","get","originalPassword","setOriginalPassword","password","setPassword","confirmPassword","setConfirmPassword","notificationRedOpen","setNotificationRedOpen","notificationRedMessage","setNotificationRedMessage","notificationGreenOpen","setNotificationGreenOpen","notificationGreenMessage","setNotificationGreenMessage","handleSubmit","event","preventDefault","userCredentials","find","user","className","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","label","fullWidth","value","onChange","target","sx","mb","color","open","message","onClose","_c","$RefreshReg$"],"sources":["E:/UADE/2023/2C/5-Aplicaciones Interactivas/ServiceHub2/service-hub/src/pages/ChangePassword/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Typography, Container } from '@mui/material';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { makeStyles } from '@mui/styles';\r\nimport mockDataBaseUserCredentials from '../../data/mockDataBaseUserCredentials';\r\nimport NotificationRed from '../../components/ui/NotificationRed';\r\nimport NotificationGreen from '../../components/ui/NotificationGreen';\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    height: '100vh',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  textField: {\r\n    margin: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n  title: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction ChangePasswordPage() {\r\n  const classes = useStyles();\r\n  const query = useQuery();\r\n  const email = query.get('email');\r\n  const [originalPassword, setOriginalPassword] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const [notificationRedOpen, setNotificationRedOpen] = useState(false);\r\n  const [notificationRedMessage, setNotificationRedMessage] = useState('');\r\n  const [notificationGreenOpen, setNotificationGreenOpen] = useState(false);\r\n  const [notificationGreenMessage, setNotificationGreenMessage] = useState('');\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const userCredentials = mockDataBaseUserCredentials.find(\r\n      (user) => user.email === email\r\n    );\r\n\r\n    if (!userCredentials || userCredentials.password !== originalPassword) {\r\n      setNotificationRedMessage('Contraseña original incorrecta.');\r\n      setNotificationRedOpen(true);\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setNotificationRedMessage('Las contraseñas ingresadas no coinciden.');\r\n      setNotificationRedOpen(true);\r\n      return;\r\n    }\r\n\r\n    // Aquí puedes agregar la lógica para restablecer la contraseña en la base de datos.\r\n    setNotificationGreenMessage('Contraseña modificada con exito!');\r\n    setNotificationGreenOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Typography className={classes.title} variant=\"h4\" gutterBottom>\r\n        Restablecer Contraseña\r\n      </Typography>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          className={classes.textField}\r\n          type=\"password\"\r\n          label=\"Contraseña Original\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          value={originalPassword}\r\n          onChange={(event) => setOriginalPassword(event.target.value)}\r\n          sx={{ mb: 2 }}\r\n        />\r\n        <TextField\r\n          className={classes.textField}\r\n          type=\"password\"\r\n          label=\"Nueva Contraseña\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          value={password}\r\n          onChange={(event) => setPassword(event.target.value)}\r\n          sx={{ mb: 2 }}\r\n        />\r\n        <TextField\r\n          className={classes.textField}\r\n          type=\"password\"\r\n          label=\"Confirmar Contraseña\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          value={confirmPassword}\r\n          onChange={(event) => setConfirmPassword(event.target.value)}\r\n          sx={{ mb: 2 }}\r\n        />\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n        >\r\n          Confirmar\r\n        </Button>\r\n      </form>\r\n      <NotificationRed\r\n        open={notificationRedOpen}\r\n        message={notificationRedMessage}\r\n        onClose={() => setNotificationRedOpen(false)}\r\n      />\r\n      <NotificationGreen\r\n        open={notificationGreenOpen}\r\n        message={notificationGreenMessage}\r\n        onClose={() => setNotificationGreenOpen(false)}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ChangePasswordPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}