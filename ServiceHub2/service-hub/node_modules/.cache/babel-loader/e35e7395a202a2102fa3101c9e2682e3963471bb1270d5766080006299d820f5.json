{"ast":null,"code":"var _jsxFileName = \"E:\\\\UADE\\\\2023\\\\2C\\\\5-Aplicaciones Interactivas\\\\ServiceHub2\\\\service-hub\\\\src\\\\pages\\\\Comments\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, List, ListItem, Box } from '@mui/material';\nimport NotificationGreen from '../../context/NotificationGreen';\nimport CommentCard from './CommentCard';\nimport mockComments from '../../data/mockComments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comments() {\n  _s();\n  const [comments, setComments] = useState(mockComments);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const handlePublish = commentId => {\n    const updatedComments = comments.filter(comment => comment.id !== commentId);\n    setComments(updatedComments);\n    setSnackbarMessage('Comentario publicado');\n    setOpenSnackbar(true);\n    // Despues hay que agregar la logica de publicar el comentario, ahora solo desaparce de la pag (leido)\n  };\n\n  const handleDelete = commentId => {\n    const updatedComments = comments.filter(comment => comment.id !== commentId);\n    setComments(updatedComments);\n    setSnackbarMessage('Comentario borrado');\n    setOpenSnackbar(true);\n  };\n  const handleCloseSnackbar = () => {\n    setOpenSnackbar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Comentarios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(ListItem, {\n          disablePadding: true,\n          children: /*#__PURE__*/_jsxDEV(CommentCard, {\n            comment: comment,\n            onPublish: handlePublish,\n            onDelete: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationGreen, {\n      open: openSnackbar,\n      message: snackbarMessage,\n      onClose: handleCloseSnackbar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Comments, \"biP+d/kVQwIYiOusG8NZFrTyLSk=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","Container","Typography","List","ListItem","Box","NotificationGreen","CommentCard","mockComments","jsxDEV","_jsxDEV","Comments","_s","comments","setComments","openSnackbar","setOpenSnackbar","snackbarMessage","setSnackbarMessage","handlePublish","commentId","updatedComments","filter","comment","id","handleDelete","handleCloseSnackbar","children","sx","p","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","disablePadding","onPublish","onDelete","open","message","onClose","_c","$RefreshReg$"],"sources":["E:/UADE/2023/2C/5-Aplicaciones Interactivas/ServiceHub2/service-hub/src/pages/Comments/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Typography, List, ListItem, Box } from '@mui/material';\nimport NotificationGreen from '../../context/NotificationGreen';\nimport CommentCard from './CommentCard';\nimport mockComments from '../../data/mockComments';\n\nfunction Comments() {\n  const [comments, setComments] = useState(mockComments);\n\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  const handlePublish = (commentId) => {\n    const updatedComments = comments.filter(\n      (comment) => comment.id !== commentId\n    );\n    setComments(updatedComments);\n    setSnackbarMessage('Comentario publicado');\n    setOpenSnackbar(true);\n    // Despues hay que agregar la logica de publicar el comentario, ahora solo desaparce de la pag (leido)\n  };\n\n  const handleDelete = (commentId) => {\n    const updatedComments = comments.filter(\n      (comment) => comment.id !== commentId\n    );\n    setComments(updatedComments);\n    setSnackbarMessage('Comentario borrado');\n    setOpenSnackbar(true);\n  };\n\n  const handleCloseSnackbar = () => {\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <Container>\n      <Box sx={{ p: 3 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          Comentarios\n        </Typography>\n        <List>\n          {comments.map((comment) => (\n            <ListItem key={comment.id} disablePadding>\n              <CommentCard\n                comment={comment}\n                onPublish={handlePublish}\n                onDelete={handleDelete}\n              />\n            </ListItem>\n          ))}\n        </List>\n      </Box>\n      <NotificationGreen\n        open={openSnackbar}\n        message={snackbarMessage}\n        onClose={handleCloseSnackbar}\n      />\n    </Container>\n  );\n}\n\nexport default Comments;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}